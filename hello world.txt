#include <iostream>
using namespace std;


/*-------------------hello world--------------
int main() {
  cout<<"hello world"<<endl;
}
*/
/*^^^^^^^^^^^^^^^^^^^^^^^^^While loop^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*------------------numbers by loop ------------------

int main() {
int number ;
  int repeat=0;
  cout<<"enter a number "<<endl;
  cin>>number ;
  while (repeat < number ){
    repeat=repeat+1;
    cout<<repeat <<" ";
  }

}*/

/*------------------ add numbers by loop ------------------

int main() {
int number;
  cout<<"give me a number "<<endl;
  cin>> number;
  
int repeat = 0 ; 
int sum=0;
int add ;
  while (repeat < number ){
  repeat = repeat   + 1;
  sum = repeat  + sum;
  cout<< sum <<" "<<endl;
  }
add= sum ;
  cout<<"= "<<endl;
  cout<<add<<endl;
  
}

*/

/*------------------ even and odd list by loop ------------------
int main() {
   int number ;
  cout<<"enter number for adding even number "<<endl;
  cin>>number;
  int repeat = 0;

  while(repeat<=number ){
   if((repeat%2)==0){
     cout<<"even number : "<<repeat<<endl;
     
   }
    else {
     cout<< "odd number :"<<repeat<<endl;
    }
    repeat=repeat+1;
    }                             
        
*/
/*------------------ pattern type = 1------------------
:):):):):)
:):):):):)
:):):):):)
:):):):):)
:):):):):)

int main() {
   int number ;
  cout<<"enter number for pattern "<<endl;
  cin>>number;
  int row = 1;
 

  while(row<=number ){
     int column=1;
   while(column<=number){
     cout<<":)";
     column=column+1;
     
   } 
  
   cout<<endl;
    row = row+1;
  }
                                   
           
}*/


/*------------------ pattern type = 2------------------
11111
22222
33333
44444
55555

 int main() {
   int number ;
  cout<<"enter number for pattern "<<endl;
  cin>>number;
  int row = 0;
  while(row<number ){
     int column=0;
   while(column<number){
     cout<<row+1;
     column=column+1;
     } 
  cout<<endl;
    row = row+1;
  }
  }*/

/*------------------ pattern type = 3------------------
54321
54321
54321
54321
54321

int main() {
int number;
  cin >>number;
  int i=0;
  while(i<number){
    int j=0;
    while(j<number){
      cout<<number-j;
      j=j+1;
    }
cout<<endl;
    i=i+1;
  }
}*/




/*------------------ pattern type = 4------------------  
0 
1 0 
2 1 0 
3 2 1 0 
4 3 2 1 0 

int main(){
  int n;
  cin>>n;
  int i=1;

while(i<=n){
    int j=1;
   while(j<=i){
     cout<<i-j<<" ";
      j=j+1;
    }
    cout<<endl;
    i=i+1;
}
}*/

/*------------------ pattern type = 5------------------
ABCDE
BCDEF
CDEFG
DEFGH
EFGHI

int main() {
  int n;
  cin>>n;
  int i=0;

  while(i<n){
    int j = 0 ;
    while(j<n){
      char ch = 'A'+i+j ;
      
      
      cout<<ch;
     
      j=j+1;
    }
    cout<<endl;
    i=i+1;
  }
  
}*/

/*------------------ pattern type = 6------------------
A
BC
CDE
DEFG
EFGHI
  
int main(){
int n;
  cin>> n;
  int i =1;
  int sum=0;
  while(i<=n){
    int j=1;
    while(j<=i){
      char ch = 'A'+i+j-2;
      cout<<ch;
     
      j=j+1;
      
    }
    cout<<endl;
    i=i+1;
    
  }
}*/


/*------------------ pattern type = 7------------------ 
    *
   **
  ***
 ****
*****
 
int main(){
int n;
  cin>> n;
  int i =1;
  while(i<=n){
    int space = n-i ;
    while(space){
          cout<<" ";
      space=space-1;
  
    }
    int j = 1;
    while (j<=i){
      cout<<"*";
      j=j+1;
    }
    cout<<endl;
    i=i+1;
  }
}*/

/*------------------ pattern type = 8------------------  
*****
 ****
  ***
   **
    *

int main(){
  int n;
  cin>>n;
  int i =0;
  while(i<n){
    int space = i;
    while(space){
      cout<<" ";
      space=space-1;
    }
    int j = 0;
    while(j<n-i){
      cout<<"*";
    j=j+1;
      
      }
    
    cout<<endl;
    i=i+1;
  }
}*/


/*------------------ pattern type = 9------------------ 
 			   1
  			  121
  			 12321
 			1234321
		       123454321
int main(){
  int n;
  cin>>n;
 int i=1;
while(i<=n){
  int space=n-i;
  while(space){
    cout<<" ";
    space= space-1;
  }
  int j=1;
  while(j<=i){
    cout<<j;
    j=j+1;
  }
  int z=i-1;
  while(z){
    cout<<z;
    z=z-1;
    
  }
  cout<<endl;
  i=i+1;
  
}}*/


/*------------------ pattern type = 10------------------ 

			1234554321
			1234**5432
			123****543
			12******54
			1********5

int main() {
  int n;
  cin>>n;
  int i=0;
  while(i<n){
    int j=0;
    while(j<n-i){
      cout<<j+1;
      j=j+1;
    }
    int star=0;
    while(star<i){
      cout<<"*";
      star=star+1;
    }
     int star1=0;
    while(star1<i){
      cout<<"*";
      star1=star1+1;
    }
      int k=0;
    while(k<n-i){
      cout<<n-k;
      k=k+1;
    }
    cout<<endl;
    i=i+1;
  }
}*/


/*^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^For Loop^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/*int main() {
  int n;
  cin>>n;
  for(int i=0;i<n;i++){
    cout<<i<<endl;
  }
}*/


/*------------------ Fibonnaci Series by loop------------------ 
0 1 1 2 3 5 8 13 21 34 55 89 


int main()  
{
    int n=10;
    
    int a=0;
    int b=1;
    cout<<a<<" "<<b<<" ";
    for(int i=1;i<=n;i++){
        int nextNumber=a+b;
        cout<<nextNumber<<" ";
        a=b;
        b=nextNumber;
    }
 
}*/
/*------------------ checking out  by nested loop------------------
0 0
0 1
0 2
0 3
0 4
1 1
1 2
1 3
1 4
2 2
2 3
2 4
3 3
3 4
4 4


#include <iostream>
using namespace std;
int main() {
for(int i =0;i<=5;i++){
  for(int j=i;j<5;j++){
    cout<<i<<" "<<j<<endl;
  }
  

}
}*/

/*------------------leet code problem 1------------------
Q1:Given an integer number n, return the difference between the product of its digits and the sum of its digits.

class Solution {
public:
    int subtractProductAndSum(int n) {
        int prod=1;
int sum=0;
while(n!=0){
    int digit = n%10;
    prod=prod*digit;
    sum=sum+digit;
    n=n/10;
}
int answer=prod-sum;
return answer;
    }
};*/

/*------------------leet code problem 1------------------
Q2:Write a function that takes the binary representation of an unsigned integer and returns the number of '1' bits 

class Solution {
public:
    int hammingWeight(uint32_t n) {
       int sum=0;
       while(n!=0){
           if(n&1){
               sum++;
           }
           n=n>>1;
       } 
       return sum;
    }
};*/